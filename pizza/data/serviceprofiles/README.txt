This test application can utilize the Cougaar service discovery capability
to find pizza providers. For details on Service Discovery, see the
Cougaar Developers Guide. Service discovery uses per-agent service profiles
for each agent that is registering services. The file 
CIP/pizza/data/serviceprofiles/<agent name>.profile.owl represents the service
capabilities of the agent in OWL format. (OWL is a Web Ontology language. See
http://www.w3.org/2004/OWL/ for more information.) 

For this application, there are 2 agents which provide pizzas - Dominos and 
JoesLocalPizzaShack. In addition, JoesLocalPizzaShack also provides salads.
You can look at JoesLocalPizzaShack.profile.owl and
Dominos.profile.owl to see example service profiles. The profiles also
define a WSDL (see http://www.w3.org/TR/wsdl) service 
grounding which is ignored by the test application. (See 
COUGAAR_INSTALL_PATH/pizza/data/servicegroundings for examples.)

The service profiles (and associated service groundings) were generated by
running the generateOWL perl script. The script uses 2 input files. 
agent-input.txt defines the service capability of the agent in terms of 
COUGAAR Roles. profile-template.txt is a template service profile. To generate
the files from  scratch -
	(a) If Perl is not installed on your computer, you can download it 
	from http://www.activestate.com.
    
	(b) cd COUGAAR_INSTALL_PATH/pizza/data/serviceprofiles.

	(c) perl generateDAML.pl agent-input.txt profile-template.txt
 
------------
FAQ:
Q: What if I want Dominos to also sell Ice Cream? That is, I want to
add a new Role?
A: To add a new Role, you must add it to the service profile. To
actually use that new Role, would of course require plugin changes in
your application.
     To add a new role to the service profile, simply edit the
     agent-input.txt file.
	Add a line with 3 hyphens (---) after the last role listed for
	Dominos. That separates role entries. Then add a row for the
	new role name. EG:
	agentName = Dominos
	roleName = PizzaProvider
	---
	roleName = IceCreamProvider

    Next, you should add this new role as an Organization type in your
    taxonomy file. Edit
    COUGAAR_INSTALL_PATH/pizza/data/taxonomies/CommercialServiceScheme-yp.xml,
    to add an entry for IceCreamProvider, copying the examples provided.

    Now, simply re-generate the service profiles, following the above
    instructions!


Q: What if I want to add another provider - say, PizzaHut?
A: To add a new provider, you must
1) Create the needed service profile.
   Edit agent-input.txt
	Add a blank line (separates agents), then add rows:
	agenName = PizzaHut
	roleName = PizzaProvider (or whatever you like)
   Re generate the service profiles, following the above instructions.
2) Add the necessary <agent> XML to one of the Node files.
       Copy the XML for Joes or Dominoes to get you started. Be sure to
   include the AssetDataParamPlugin to create a self Entity (needed
   for Relationships), the community plugin (to be in the YP
   communities), and the various YP and UDDI4J components as
   noted. Then add the SDRegistrationPlugin (to register you in the
   YP) and the SDProviderPlugin (to accept requests for service).
3) Add your agent to one of the YP communities.
   A provider must register in the YP to be found and used. To
   register in the YP, it must belong to a YP community. So add an
   entry for your agent to the communities.xml file in the YP
   community you want it to register with.
